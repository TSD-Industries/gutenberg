AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'

Parameters:
  WpRestUser:
    Type: String
  WpRestPassword:
    Type: String
  WpUrl:
    Type: String
  OpenAiApiKey:
    Type: String

Resources:
  GutenbergLambdaFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: ../target/lambda.jar
      Handler: org.tsd.gutenberg.GutenbergRequestHandler
      Runtime: java11
      MemorySize: 256
      Timeout: 120
      Role: !GetAtt GutenbergLambdaExecutionRole.Arn
      Environment:
        Variables:
          WP_URL: !Ref WpUrl
          WP_REST_PASSWORD: !Ref WpRestPassword
          WP_REST_USER: !Ref WpRestUser
          OPEN_AI_API_KEY: !Ref OpenAiApiKey
      Events:
        HelloWorldApi:
          Type: Api
          Properties:
            Path: /hello
            Method: GET
  GutenbergLambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: GutenbergLambdaPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: logs:CreateLogGroup
                Resource: arn:aws:logs:*:*:*
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:us-east-1:805215575150:log-group:*
  GutenbergLambdaBookReviewEventRule:
    Type: AWS::Events::Rule
    Properties:
      Name: "BookReviewCronRule"
      Description: "Write a book review at 4AM UTC."
      ScheduleExpression: "cron(0 4 * * ? *)" # Trigger 04:00
      State: "ENABLED"
      EventPattern:
        source:
          - scheduled.bookreview.source
        detail-type:
          - Book Review
        detail:
          scheduledEventType:
            - book_review
      Targets:
        - Arn: !GetAtt GutenbergLambdaFunction.Arn
          Id: "GutenbergLambdaTarget"
  GutenbergLambdaSisyphusEventRule:
    Type: AWS::Events::Rule
    Properties:
      Name: "SisyphusCronRule"
      Description: "Write a Sisyphus column Saturday at 7AM UTC."
#      ScheduleExpression: "cron(0 7 * * SAT *)" # Trigger 07:00 Saturdays
      ScheduleExpression: "cron(0/3 * * * ? *)"
      State: "ENABLED"
      EventPattern:
        source:
          - scheduled.sisyphus.source
        detail-type:
          - Sisyphus
        detail:
          scheduledEventType:
            - sisyphus
      Targets:
        - Arn: !GetAtt GutenbergLambdaFunction.Arn
          Id: "GutenbergLambdaTarget"
  PermissionForEventsToInvokeGutenbergBookReviewLambdaFunction:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref GutenbergLambdaFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt GutenbergLambdaBookReviewEventRule.Arn
  PermissionForEventsToInvokeGutenbergSisyphusLambdaFunction:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref GutenbergLambdaFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt GutenbergLambdaSisyphusEventRule.Arn